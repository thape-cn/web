---
image: cimg/ruby:3.4.3-browsers

variables:
  POSTGRES_HOST: postgres
  POSTGRES_DB: thape_web_test
  POSTGRES_USER: postgres
  POSTGRES_PASSWORD: postgres
  CACHE_FALLBACK_KEY: "$CI_COMMIT_REF_SLUG"

before_script:
  - bundle config set path 'vendor'  # Install dependencies into ./vendor/ruby

stages:
  - test
  - deploy

test:
  services:
    - postgres:12.9
  stage: test
  cache:
    - key:
        files:
          - Gemfile.lock
      paths:
        - vendor/ruby
    - key:
        files:
          - yarn.lock
      paths:
        - ".yarn-cache/"
  variables:
    DATABASE_URL: postgresql://postgres:postgres@postgres:5432/$POSTGRES_DB
  script:
    - bundle install -j $(nproc)
    - yarn install --cache-folder .yarn-cache
    - cp config/database.yml.sample.yaml config/database.yml
    - bin/rails db:drop RAILS_ENV=test
    - bin/rails db:setup RAILS_ENV=test
    - bin/rails test

deploy_staging:
  cache:
    - key:
        files:
          - Gemfile.lock
      paths:
        - vendor/ruby
  stage: deploy
  script:
    - bundle install -j $(nproc)
    - mkdir ~/.ssh
    - mv "$SSH_ID_RSA" ~/.ssh/id_rsa
    - mv "$SSH_CONFIG_FILE" ~/.ssh/config
    - bundle exec cap staging deploy
  environment:
    name: staging
    url: https://tailwind.thape.com.cn

deploy_production:
  cache:
    - key:
        files:
          - Gemfile.lock
      paths:
        - vendor/ruby
  stage: deploy
  script:
    - bundle install -j $(nproc)
    - mkdir ~/.ssh
    - mv "$SSH_ID_RSA" ~/.ssh/id_rsa
    - mv "$SSH_CONFIG_FILE" ~/.ssh/config
    - bundle exec cap production deploy
  environment:
    name: production
    url: https://www.thape.com
  when: manual
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
