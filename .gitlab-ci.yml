# You can override the included template(s) by including variable overrides
# SAST customization: https://docs.gitlab.com/ee/user/application_security/sast/#customizing-the-sast-settings
# Secret Detection customization: https://docs.gitlab.com/ee/user/application_security/secret_detection/#customizing-settings
# Dependency Scanning customization: https://docs.gitlab.com/ee/user/application_security/dependency_scanning/#customizing-the-dependency-scanning-settings
# Note that environment variables can be set in several places
# See https://docs.gitlab.com/ee/ci/variables/#cicd-variable-precedence
---
include:
  - template: Security/SAST.gitlab-ci.yml

stages:
  - test

.sast-analyzer:
  extends: sast
  stage: test
  artifacts:
    paths:
      - gl-sast-report.json
  variables:
    SAST_EXCLUDED_ANALYZERS: eslint, nodejs-scan, semgrep
  allow_failure: true
  # `rules` must be overridden explicitly by each child job
  # see https://gitlab.com/gitlab-org/gitlab/-/issues/218444
  script:
    - /analyzer run

variables:
  POSTGRES_HOST: postgres
  POSTGRES_DB: thape_web_test
  POSTGRES_USER: postgres
  POSTGRES_PASSWORD: postgres
  CACHE_FALLBACK_KEY: "$CI_COMMIT_REF_SLUG"

cache:
  - key:
      files:
        - Gemfile.lock
    paths:
      - vendor/ruby
  - key:
      files:
        - yarn.lock
    paths:
      - ".yarn-cache/"

rails:
  image: circleci/ruby:3.0.3-node-browsers
  services:
    - postgres:12.9
  stage: test
  variables:
    DATABASE_URL: postgresql://postgres:postgres@postgres:5432/$POSTGRES_DB
  script:
    - bundle config mirror.https://rubygems.org https://gems.ruby-china.com
    - bundle config set path 'vendor'
    - bundle install -j $(nproc)
    - yarn install --cache-folder .yarn-cache
    - cp config/database.yml.sample.yaml config/database.yml
    - bin/rails db:drop RAILS_ENV=test
    - bin/rails db:setup RAILS_ENV=test
    - bin/rails test
